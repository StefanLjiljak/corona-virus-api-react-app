{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useStats = url => {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const data = await fetch(url).then(res => res.json()).catch(err => setError(err));\n      setStats(data);\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n  return stats, loading, error;\n};\n\nexport default useStats;","map":{"version":3,"sources":["D:/itBootcamp/corona-virus-api-react-app/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","data","fetch","then","res","json","catch","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5BH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAL,CAChBU,IADgB,CACVC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADE,EAEhBC,KAFgB,CAETC,GAAD,IAASR,QAAQ,CAACQ,GAAD,CAFP,CAAnB;AAGAZ,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD;;AAQAG,IAAAA,SAAS;AACV,GAVQ,EAUN,CAACP,GAAD,CAVM,CAAT;AAWA,SAAOC,KAAK,EAAEE,OAAF,EAAWE,KAAvB;AACD,CAjBD;;AAmBA,eAAeN,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useStats = (url) => {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      const data = await fetch(url)\r\n        .then((res) => res.json())\r\n        .catch((err) => setError(err));\r\n      setStats(data);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n  return stats, loading, error;\r\n};\r\n\r\nexport default useStats;\r\n"]},"metadata":{},"sourceType":"module"}